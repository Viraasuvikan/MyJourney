--===JOPY STORE===--
BreakTiles = "1"
Time = {}
ProxyBackUp = {}
berlian = {}
pohon = {}
worlds = {}
t = os.time()	
loop = 0
bw = 0
gemsawal = 0
gemssave = 0
gemsakhir = 0
strWaktu = ""
afgangila = "true"
skiptutorial = "false"
seeddata = ""
rumah = ""
totaldropnya = 0
IndexBotChange = 1
ChangeProxyIndex = 1
proxyIndex = 1
proxyIndexAdd = 1
proxyIndexAddAttempt = 0
fire = false
BpCek = false
growidIndex = 1
IndexSavePack = 1
IndexSaveSeed = 1
emoji = ""
world = getBot():getWorld() 
inventory = getBot():getInventory()
loopnya = 0
checknya = false
widreal = ""
metotone = false

if OwnerName == "" then
return
end

function TagBan(text)
local httpClient = HttpClient.new()
httpClient:setMethod(Method.post)  -- Menggunakan HTTP method POST

httpClient.url = WhTagBan
httpClient.headers["User-Agent"] = "Lucifer"
httpClient.headers["Content-Type"] = "application/json"  -- Menetapkan tipe konten JSON

local webhookData = '{"content": text}'
httpClient.content = webhookData

local httpResult = httpClient:request()
end

if not checknya then
httpClient = HttpClient.new()
httpClient:setMethod(Method.get)
httpClient.url = "https://rentry.co/benerilang/raw"
httpClient.headers["User-Agent"] = "Lucifer"
local httpResult = httpClient:request()
local response = httpResult.body

if string.find(response, OwnerName) then
checknya = true
else
TagBan("**OwnerName Not Found , Please Use Command First Then Run The Script ** @everyone")
print("Failed To Get OwnerName Data")
return
end
end

startslotbot = 1

for index, namebotx in pairs(getBots()) do
   if namebotx.name:upper() == getBot().name:upper() then
      rulah = index + ( startslotbot - 1 )
      break
   end
end

sleepwarp = 0

for i = 1,rulah do
sleepwarp = sleepwarp + 9000
end

urutanproxybackup = rulah * MaxProxyPerBot

for i = 1,MaxProxyPerBot do
    table.insert(ProxyBackUp, proxy[urutanproxybackup])
    urutanproxybackup = urutanproxybackup - 1
end


urutanbot = rulah * MaxWorldPerBot


for i = 1, MaxWorldPerBot do
   table.insert(worlds,WorldList[urutanbot])
   urutanbot = urutanbot - 1
end

for i = 1, rulah do
    if WEBHOOK[i] and MESSAGEID[i] then
        WhStatus = WEBHOOK[i]
        MessageID = MESSAGEID[i]
        rulah = rulah - 1
    else
        WhStatus = ""
        MessageID = ""
        rulah = rulah - 1
    end
end



seedid = 0

function detect2(itemid)
local count = 0
for i, tile in pairs(getBot():getWorld():getTiles()) do
if tile.fg == itemid then
count = count + 1
end
end
return count
end


function detect()
if SoilFarmMode then
seedid = 8641
return seedid
end
    for y = 53, 1, -1 do
        for x = 98, 2, -1 do
            local tile = world:getTile(x, y)
            if tile.fg ~= 0 and detect2(tile.fg) > 50 then
                return tile.fg
            end
        end
    end

    return 0
end



blockid = seedid-1
start = 1
stop = #WorldList

if loop then
    for i = 0,start - 1 do
        table.insert(worlds,WorldList[i])
    end
end


function DataWorld()
    strWaktu = ""
        for _, world in pairs(worlds) do
strWaktu = strWaktu .. "\n**" .. world:upper() .. " [ " .. (Time[world] or "?") .. " | " .. ":palm_tree: : " .. (pohon[world] or "0") .. " | " .. ":gem: : " .. (berlian[world] or "0") .. " ]**"  
end
return strWaktu
end

   function Fossil()
   local fossil = 0
    for _,tile in ipairs(getBot():getWorld():getTiles()) do
        if tile.fg == 3918 then
            fossil = fossil + 1
        end
    end
    return fossil 
end

function metot1()
local item_list = {250,1716,82,78,94,662,754,146,356,72,46,124,1720,92,1122,212,84,1722,1844,2718,70,4966,288,232,788,148,96,3932,448,98,134,50,74,1504,494,266,852,132,2954,3934,3060,3056,1800,88,2960,1022,2578,3964,86,302,1332,304,1116,6788,10542,492,1690,316,1850,1718,1838,1032,1860,1026,3048,352,724,1590,798,488,1342,794,268,1502,8884,1858,594,3466,1314,1688,1312,3590,446,1856,1854,1516,1316,2700,4968,4964,6796,1862,310,290,296,6674,1864,4954,1476,896,1848,496,136,158,2958,2576,1954,152,1126,796,1524,2928,80,2934,150,1120,1142,1478,154,9356,452,258,2882,156,1140,3530,312,1124,890,1330,3052,294,1650,1652,348,1736,576,5016,1708,292,1146,1028,1762,600,11204}

for _, item_id in ipairs(item_list) do
    local item_count = inventory:getItemCount(item_id)  -- Menggunakan fungsi yang sesuai

    if item_count > 0 then
        getBot():wear(item_id)
        sleep(2000)
    end
end
end

function rmetot1()
if not metotone then
if getBot().gem_count > 500 then
getBot():sendPacket(2,"action|buy\nitem|rare_clothes")
sleep(4000)
metot1()
metotone = true
end
end
end

  function tre()
  local readytree = 0
      for i,til in ipairs(world:getTiles()) do
          if til.fg == seedid and til:canHarvest() then
          readytree = readytree + 1
          end
      end
      return readytree
    end


function totaltree()
  local readytree = 0
      for i,til in pairs(getBot():getWorld():getTiles()) do
          if til.fg == seedid then
          readytree = readytree + 1
          end
      end
      return readytree
    end


   function un()
 unreadytree = 0
for i, t in pairs(getBot():getWorld():getTiles()) do
if t.fg == seedid and not t:canHarvest() then
unreadytree = unreadytree + 1
end
end
return unreadytree
end

function cekemoji()
if seedid == 4585 then
return "<:paperseedbs:1063061801601871932>"
elseif seedid == 5667 then
return "<:lgrid_seed:1091612884758437959>"
elseif seedid == 3005 then
return "<:fish_tank_seed:1012563310308233327>"
elseif seedid == 8641 then
return "<:Fence_seed:1121360619887661056>"
else
return  "<:paperseedbs:1063061801601871932>"
end
end

function status()
    if getBot().status == BotStatus.online then
      return string.upper("Online")
    elseif getBot().status == BotStatus.server_busy then
      return string.upper("Server Is Busy")
    elseif getBot().status == BotStatus.offline then
      return string.upper("Offline")
    elseif getBot().status == BotStatus.location_banned then
      return string.upper("Shadow Banned")  
    elseif getBot().status == BotStatus.account_banned then
      return string.upper("Suspended / Banned")
    elseif getBot().status == BotStatus.maintenance then
      return string.upper("Maintenance")
    elseif getBot().status == BotStatus.error_connecting then
      return string.upper("Error Connecting")  
    else
      return string.upper("Unknown Status")        
    end
end


function cekbuyer(nameowner)
httpClient = HttpClient.new()
httpClient:setMethod(Method.get)
httpClient.url = "https://rentry.org/Mihajnxy2/raw"
httpClient.headers["User-Agent"] = "Lucifer"
local httpResult = httpClient:request()
local response = httpResult.body
  
  -- Memisahkan teks menjadi baris-baris
  local lines = {}
  for line in response:gmatch("[^\r\n]+") do
    table.insert(lines, line)
  end
  
  -- Mencari UserID berdasarkan nama owner
  for _, line in ipairs(lines) do
    local owner, userid = line:match("(%S+)%s+(%d+)")
    if owner == nameowner then
      return userid -- Mengembalikan UserID
    end
  end
  
  return nil -- Jika nama owner tidak ditemukan
end


totalpack = 0
hasilpack = 0
hasilseed = 0
seeddrop = 0

function cekhasilseed()
if hasilseed > 0 then
return "( + "..hasilseed.." ) "
else
return  ""
end
end

function cekhasilpack()
if hasilpack > 0 then
return "( + "..hasilpack.." ) "
else
return  ""
end
end


function nungguverify()
if not checknya then
return " Waiting To Verify!"
else
return " Verified!"
end
end

function cekemoji2()
if seedid == 4585 then
return "<:peppertree:999318156696887378>"
elseif seedid == 5667 then
return "<:lgrid:999318066070552716>"
else
return  "<:lgrid:999318066070552716>"
end
end

function ceknya()
httpClient = HttpClient.new()
httpClient:setMethod(Method.get)
httpClient.url = "https://rentry.org/Mihajnxy2/raw"
httpClient.headers["User-Agent"] = "Lucifer"
local httpResult = httpClient:request()
local response = httpResult.body
  
  -- Menghitung jumlah baris
  local lineCount = 0
  for _ in response:gmatch("[^\r\n]+") do
    lineCount = lineCount + 1
  end
  
  return lineCount
end


function cekbp()
if not BpCek then
if getBot():getInventory().slotcount < 36 then
if getBot().gem_count > 300 then
repeat
getBot():sendPacket(2,"action|buy\nitem|upgrade_backpack")
sleep(3000)
until getBot():getInventory().slotcount == 36
BpCek = true
end
end
end
end

function botshow(Info)
te = os.time() - t
 local verify = "<a:cham:849841924734976000> **Status Verify: "..nungguverify().."**"
local activity = "**<:Pickaxe:1109395511661830176> Activity: "..Info.."**"
local namebot = "**<:bot:1049606018008612874> Name: "..getBot().name:upper().." ( "..getBot().level.." )**"
local world = "**<:World:1006699847308546109> World:** ||**"..getBot():getWorld().name:upper().."**||"
local statusbot = "**<a:Online:1063444758783078480> Status: "..status().."**"
local ping = "**<:Ping:1136942362103402566> Ping: "..getBot():getPing().." Ms**"
local ready = "**"..emoji.." Ready Tree: "..tre().."**"
local unready = "**"..emoji.." UnReady Tree: "..un().."**"
local gems = "**<:gems:1083907540242407547> Gems: "..getBot().gem_count.."**"
local fossilinfo = "**<:fossilrock:1064165167992156240> Fossil: "..Fossil().."**"
local uptime = "**<:pro_timeout:1100160755287982150>  Up Time**\n**"..math.floor(te/86400).." Days "..math.floor(te%86400/3600).." Hours "..math.floor(te%86400%3600/60).." Minutes "..math.floor(te%86400%3600%60).." Seconds**"

local deskripsi = verify .. "\n\n" .. activity .. "\n" .. namebot .. "\n" .. world .. "\n" .. statusbot .. "\n" .. ping .. "\n" .. ready .. "\n" .. unready .. "\n" .. gems .. "\n" .. fossilinfo .. "\n" ..DataWorld().. "\n\n" ..uptime
local thumbnailUrl = "https://cdn.discordapp.com/icons/1083626271038263357/8e34c12fcd52fa363eeb14c2e401a26b.png?size=4096"
local currentDateTime = os.date("!%Y-%m-%dT%H:%M:%SZ")
local ICON_URL = "https://share.creavite.co/9ugoY1REemeb0nVZ.gif"

local httpClient = HttpClient.new()
httpClient:setMethod(Method.patch) 

httpClient.url = WhStatus .."/messages/" .. MessageID
httpClient.headers["User-Agent"] = "Lucifer"
httpClient.headers["Content-Type"] = "application/json"  -- Menetapkan tipe konten JSON

local webhookData = '{"embeds": [{"title": "Jopy Rotation Nuron ( Total Buyer: '..ceknya()..' )", "description": "'..deskripsi:gsub("\n", "\\n")..'", "color": 16711680, "thumbnail": {"url": "'..thumbnailUrl..'"}, "timestamp": "'..currentDateTime..'"}]}'
httpClient.content = webhookData

    local success, httpResult = pcall(function()
        return httpClient:request()
    end)

    if not success then
        print("Error sending HTTP request:", httpResult)
    else
        print("HTTP request sent successfully. Response:", httpResult)
    end
end

function botpack(Info)
if not UseWebhookPackAndSeed then
return
else
te = os.time() - t
 local packname = "<:shop_sign:1012590603172847648> **Pack Name: "..pack.."**"
local activity = "**<:Pickaxe:1109395511661830176> Activity: "..Info.."**"
local namebot = "**<:bot:1049606018008612874> Name: "..getBot().name:upper().." ( "..getBot().level.." )**"
local world = "**<:World:1006699847308546109> World: **||**"..getBot():getWorld().name:upper().."**||"
local statusbot = "**<a:Online:1063444758783078480> Status: "..status().."**"
local ping = "**<:Ping:1136942362103402566> Ping: "..getBot():getPing().." Ms**"
local gems = "**<:gems:1083907540242407547> Gems: "..getBot().gem_count.."**"
local uptime = "**<:pro_timeout:1100160755287982150>  Up Time**\n**"..math.floor(te/86400).." Days "..math.floor(te%86400/3600).." Hours "..math.floor(te%86400%3600/60).." Minutes "..math.floor(te%86400%3600%60).." Seconds**"
local totalseed = "**"..emoji.." Total Seed: "..seeddrop.."  "..cekhasilseed().." **"
local totalpacknya = "**<:small_seed_pack:1098848345956560997> Total Pack: "..totalpack.."  "..cekhasilpack().." **"

local deskripsi =  packname .. "\n" .. activity .. "\n" .. namebot .. "\n" .. world .. "\n" .. statusbot .. "\n" .. ping .. "\n" .. gems .. "\n" .. totalseed .. "\n" .. totalpacknya .. "\n\n" ..uptime
local thumbnailUrl = "https://cdn.discordapp.com/icons/1083626271038263357/8e34c12fcd52fa363eeb14c2e401a26b.png?size=4096"
local currentDateTime = os.date("!%Y-%m-%dT%H:%M:%SZ")
local ICON_URL = "https://share.creavite.co/9ugoY1REemeb0nVZ.gif"

local httpClient = HttpClient.new()
httpClient:setMethod(Method.patch)  -- Menggunakan HTTP method POST

httpClient.url = WhPackAndSeed .."/messages/" .. MessageIDPack
httpClient.headers["User-Agent"] = "Lucifer"
httpClient.headers["Content-Type"] = "application/json"  -- Menetapkan tipe konten JSON

local webhookData = '{"embeds": [{"title": "Jopy Rotation Nuron ( Total Buyer: '..ceknya()..' )", "description": "'..deskripsi:gsub("\n", "\\n")..'", "color": 16711680, "thumbnail": {"url": "'..thumbnailUrl..'"}, "timestamp": "'..currentDateTime..'"}]}'
httpClient.content = webhookData

-- Mengirimkan HTTP request menggunakan HttpClient dan mendapatkan respons
local httpResult = httpClient:request()
end
end


function soilmode()
  if SoilFarmMode then
    if IgnoreGems then
      getBot().ignore_gems = true
      getBot().auto_collect = true
      for _, tile in pairs(getBot():getWorld():getTiles()) do
       if tile.fg == seedid and tile:canHarvest() and inventory:getItemCount(seedid-1) < 165 then
          if world:hasAccess(tile.x,tile.y) then
            getBot():getBot():findPath(tile.x, tile.y)
         while world:getTile(tile.x,tile.y).fg == seedid and tile:canHarvest() do
            sleep(20)
            getBot():hit(tile.x,tile.y)
            sleep(delayharvest)
            end
       while world:getTile(tile.x, tile.y+1).fg == (seedid + 3) and world:getTile(tile.x, tile.y+1).flags ~= 0 do
       getBot():hit(tile.x,tile.y+1)
       sleep(delayharvest)
              reconnect(tile.x, tile.y)
            end
          end
      end
end
    else
      getBot().auto_collect = true
      for i, tile in pairs(world:getTiles()) do
       if tile.fg == seedid and tile:canHarvest() and inventory:getItemCount(seedid-1) < 165 then
   if world:hasAccess(tile.x,tile.y) then
    getBot():getBot():findPath(tile.x, tile.y)
          while world:getTile(tile.x,tile.y).fg == seedid and tile:canHarvest() do
            sleep(20)
            getBot():hit(tile.x,tile.y)
            sleep(delayharvest) 
            reconnect(tile.x, tile.y)
          end
     while world:getTile(tile.x, tile.y+1).fg == (seedid + 3) and world:getTile(tile.x, tile.y+1).flags ~= 0 do
     getBot():hit(tile.x,tile.y+1)
     sleep(delayharvest)
              reconnect(tile.x, tile.y - 1)
            end
          end
      end
    end
end
  end
end

function mf(xy)
    return math.floor(xy / 32)
end

function punch(x,y)
    getBot():hit(mf(world:getLocal().posx) + x,mf(world:getLocal().posy) + y)
end

function place(id,x,y)
   getBot():place(mf(world:getLocal().posx) + x,mf(world:getLocal().posy) + y,id)
end


 function coptrashs()
        for a, trash in ipairs(trashList) do
            trash_count = getBot():getInventory():getItemCount(trash)
            if getBot():getInventory():getItemCount(trash) > MaxItemToTrash then
                getBot():sendPacket(2,"action|trash\n|itemID|"..trash) 
                sleep(1500)
                getBot():sendPacket(2,"action|dialog_return\ndialog_name|trash_item\nitemID|"..trash.."|\ncount|"..trash_count)
                sleep(4000)
            end
        end
    end



local processedTimes = {} -- Tabel untuk menyimpan waktu yang telah diproses

function botRest()
    local current_hour = tonumber(os.date("%H"))

    for i = #TimeRest, 1, -1 do
        local curah = TimeRest[i]
        if current_hour == curah and not isTimeProcessed(curah) then
            getBot():disconnect()
            botshow("Bot Rest.. For " .. SleepRest .. " Minutes")
            sleep(SleepRest * 60 * 1000)
            getBot():connect()
            botshow("Bot Done Rest, Starting Back...")
            if getBot().status ~= 1 then
                repeat
                    getBot():connect()
                    sleep(10000)
                until getBot().status == 1
            end
            if getBot().status == 1 then
                table.insert(processedTimes, curah) -- Menyimpan waktu yang telah diproses
                warp(rumah, widreal)
                jalan()
                break -- Keluar dari loop jika jam cocok
            end
        end
    end
end


function isTimeProcessed(time)
    for i = 1, #processedTimes do
        if processedTimes[i] == time then
            return true -- Mengembalikan true jika waktu sudah diproses sebelumnya
        end
    end
    return false -- Mengembalikan false jika waktu belum diproses sebelumnya
end


  function scanBlock(ID)
  local toxic = 0
      for _,til in ipairs(getBot():getWorld():getTiles()) do
          if til.fg == ID then
          toxic = toxic + 1
          end
      end
      return toxic
    end

function antiToxic()
    if scanBlock(778) > 0 then
        while scanBlock(778) > 0 do
            for _,tile in pairs(getBot():getWorld():getTiles()) do
                if tile.fg == 778  then
                    getBot():findPath(tile.x-1,tile.y)
                    while world:getTile(math.floor(getBot():getWorld():getLocal().pos.x/32 + 1), math.floor(getBot():getWorld():getLocal().pos.y/32)).fg == 778 do
                      punch(1,0)
                        sleep(160)
                    end
                end
            end
            for _,tile in pairs(getBot():getWorld():getTiles()) do
                if tile.fg == 778 and world:getTile(tile.x-1,tile.y).flags==0 then
                   getBot():findPath(tile.x-1,tile.y)
                    while world:getTile(math.floor(getBot():getWorld():getLocal().pos.x/32 + 1), math.floor(getBot():getWorld():getLocal().pos.y/32)).fg == 778 do
                        punch(1, 0)
                        sleep(160)
                    end
                end
            end
        end
    end
end

function offandon()
waras = bot:getWorld().name
httpClient = HttpClient.new()
httpClient:setMethod(Method.get)
httpClient.url = RentryLink
httpClient.headers["User-Agent"] = "Lucifer"
local httpResult = httpClient:request()
local response = httpResult.body
if response == "OFF" then
sleep(1000)
        bot:disconnect()
        botshow("Bot Off..")
        repeat
until response == "ON"
sleep(1000)
        botshow("Bot Back Online..")
        bot:connect()
        sleep(10000)
        warp(waras,widreal)
        jalan()
end
end


function addnyaproxy(rara)
while true do
if proxyIndex <= #proxy then
if growidIndex <= #BotGrowid then
local growidcuy = BotGrowid[growidIndex]
local proxycuy = proxy[proxyIndex]
addBot(growidcuy,PassBot,proxycuy)
sleep(10000)
if getBot().status ~= BotStatus.online then
getBot():connect()
sleep(8000)
end
if getBot().status == BotStatus.online then
warp(rumah,widreal)
removeBot(rara)
jalan()
break
end
if getBot().status == BotStatus.account_banned or getBot().status == BotStatus.location_banned then
botshow(""..getBot().name.." Is "..status().."")
removeBot(growidcuy)
growidIndex = growidIndex  + 1
end
end
end
end
end

function addnyabiasa(rara)
while true do
if growidIndex <= #BotGrowid then
local growidcuy = BotGrowid[growidIndex]
local proxycuy = proxy[proxyIndex]
addBot(growidcuy,PassBot)
sleep(10000)
if getBot().status ~= BotStatus.online then
getBot():connect()
sleep(8000)
end
if getBot().status == BotStatus.online then
warp(rumah,widreal)
removeBot(rara)
jalan()
break
end
if getBot().status == BotStatus.account_banned or getBot().status == BotStatus.location_banned then
botshow(""..getBot().name.." Is "..status().."")
removeBot(growidcuy)
growidIndex = growidIndex  + 1
end
end
end
end



function cekbroya()
if useproxy then
addnyaproxy(getBot().name)
else
addnyabiasa(getBot().name)
end
end

function banned()
  if BackUpBot then
  cekbroya()
  jalan()
  else
  botshow("Bot Got Ban, No BackUpBot :)")
  removeBot(getBot().name)
  end
end

function backpos(x,y)
werkd = rumah
    for _, tile in pairs(world:getTiles()) do
        if world:getTile(math.floor(world:getLocal().posx / 32),math.floor(world:getLocal().posy / 32)).fg == 6 then
            repeat
            getBot():sendPacket(3,"action|join_request\nname|".. werkd .. "|" .. widreal.."\ninvitedWorld|0")
            sleep(4000)
            until world:getTile(math.floor(world:getLocal().posx / 32),math.floor(world:getLocal().posy / 32)).fg ~= 6
            if x and y and getBot().status == BotStatus.online and getBot():getWorld().name:upper() == werkd:upper() then
                repeat
                    getBot():findPath(x,y)
                    sleep(100)
                until math.floor(world:getLocal().posx / 32) == x or math.floor(world:getLocal().posy / 32) == y
            end
            if getBot().status == BotStatus.online and getBot():getWorld().name:upper() == werkd:upper() then
                if x and y then
                    if getBot().status == BotStatus.online and math.floor(world:getLocal().posx / 32) == x and math.floor(world:getLocal().posy / 32) == y then
                        break
                    end
                elseif getBot().status == BotStatus.online then
                    break
                end
            end
        end
    end
end

function enetStatus()
    if getBot():getEnetStatus() == Disconnected then
        return string.upper("Offline")
    elseif getBot():getEnetStatus() == Connected then
        return string.upper("Online")
    elseif getBot():getBotStatus() == ShadowBan then
        return string.upper("Shadow Ban")
    else
        return string.upper("Unknown Status")
    end
end

function reconnect(x,y)
atas = getBot():getWorld().name
if getBot().status == 1 and getBot():getWorld().name:upper() == "EXIT" then
TagBan("**"..getBot().name:upper().." In EXIT, Now Back To Farm In "..rumah.." @everyone **")
sleep(5000)
warp(rumah,widreal)
backpos(x,y)
jalan()
end
if getBot().status ~= 1 then
TagBan("**"..getBot().name:upper().." Was "..status().." Reconnecting... @everyone **")
repeat
getBot():connect()
sleep(8000)
until getBot().status == 1 or getBot().status == BotStatus.account_banned or getBot().status == BotStatus.location_banned
if getBot().status == BotStatus.account_banned then 
TagBan("**"..getBot().name:upper().." Was "..status().." Removing Bot... @everyone**")
banned()
end
if getBot().status == BotStatus.location_banned then
TagBan("**"..getBot().name:upper().." Was "..status().." Removing Bot... @everyone**")
banned()
end
if getBot().status == 1 then
TagBan("**"..getBot().name:upper().." Was "..status().." Now Back To Farm.. @everyone **")
sleep(5000)
warp(rumah,widreal)
backpos(x,y)
jalan()
end
end
end

  function Take()
botshow("Taking Seed For Planting Blank Seed")
	warp(WorldSaveSeed[IndexSaveSeed], WorldSaveSeedID)
	for _, object in pairs(getBot():getObjects()) do
	  if object.id == seedid then
		if inventory:getItemCount(seedid) == 200 then
		  break
		end
		getBot():findPath(math.floor(object.x /32), math.floor(object.y /32))
		sleep(100)
		getBot().auto_collect = true
                if inventory:getItemCount(seedid) > 0 then
                getBot().auto_collect = false
             end
	  end
	end
	  warp(rumah,widreal)
	end

  function tambal()
  botshow("Planting Blank Seed...")
for i, tile in ipairs(getBot():getWorld():getTiles()) do
if 0 == world:getTile(tile.x, tile.y).fg and 0 ~= world:getTile(tile.x, tile.y + 1).fg and world:getTile(tile.x, tile.y + 1).fg ~= seedid and inventory:getItemCount(seedid) > 0 then
if inventory:getItemCount(seedid) == 0 then		
Take()
end
if world:hasAccess(tile.x, tile.y) then
getBot():findPath(tile.x, tile.y)
sleep(20)
if world:getTile(math.floor(world:getLocal().posx / 32), math.floor(world:getLocal().posy / 32)).fg == 0 then
reconnect(tile.x,tile.y)
getBot():place(tile.x,tile.y,seedid)
sleep(20)
sleep(delayplant)
end
if world:getTile(math.floor(world:getLocal().posx / 32 - 1), math.floor(world:getLocal().posy / 32)).fg == 0 then
reconnect(tile.x,tile.y)
getBot():place(tile.x,tile.y,seedid)
sleep(20)
sleep(delayplant)
end
end
end
end
end

function banwave()
waras = getBot():getWorld().name
httpClient = HttpClient.new()
httpClient:setMethod(Method.get)
httpClient.url = "https://rentry.org/rihkumah/raw"
httpClient.headers["User-Agent"] = "Lucifer"
local httpResult = httpClient:request()
local playerData = httpResult.body
local playerNumber = tonumber(playerData:match("%d+"))
  if playerNumber and playerNumber > tonumber(CustomOffPlayer) then
  local startTime = os.time() -- Waktu mulai
    sleep(1000)
    getBot():disconnect()
    botshow("Bot Off, Ban Wave!, Rest For "..SleepBotOff.." Minutes")
    sleep(SleepBotOff * 60 * 1000)
    if getBot().status ~= 1 then
    while getBot().status ~= 1 do
    getBot():connect()
    sleep(7000)
    end
    end
    if getBot().status == 1 then
    warp(waras,widreal)
    jalan()
  end
end
end

function takenyaseed()
warp(WorldSaveSeed[IndexSaveSeed],WorldSaveSeedID)
getBot().auto_collect = false
while inventory:getItemCount(seedid) < 120 do
        for _,obj in pairs(getBot():getObjects()) do
            if obj.id == seedid then
                getBot():findPath(math.floor(obj.x  / 32 - 1),math.floor(obj.y / 32))
                sleep(1000)
                getBot().auto_collect = true
                sleep(1000)
            end
            if inventory:getItemCount(seedid) > 120 or inventory:getItemCount(seedid) == 120 then
                getBot().auto_collect = false
                break
            end
        end
    end
if inventory:getItemCount(seedid) > 121 then
    getBot():sendPacket(2,"action|drop\n|itemID|"..seedid)
    sleep(1000)
    getBot():sendPacket(2,"action|dialog_return\ndialog_name|drop_item\nitemID|"..seedid.."|\ncount|"..(inventory:getItemCount(seedid) - 120))
    sleep(1000)
end
warp(rumah,widreal)
end

function harvest()
if SeparatePlant then
atas = getBot():getWorld().name
antiToxic()
soilmode()
coptrashs()
getBot().auto_collect = true
for i, tile in ipairs(world:getTiles()) do
if tile.fg == seedid and tile:canHarvest() and inventory:getItemCount(seedid-1) < 150 then
if world:hasAccess(tile.x,tile.y) then
getBot():findPath(tile.x,tile.y)
while world:getTile(tile.x,tile.y).fg == seedid and tile:canHarvest() do
reconnect(tile.x,tile.y)
getBot():hit(tile.x,tile.y)
sleep(delayharvest)
end
end
end
end
else
antiToxic()
soilmode()
coptrashs()
getBot().auto_collect = true
for i, tile in ipairs(world:getTiles()) do
if tile.fg == seedid and tile:canHarvest() and inventory:getItemCount(seedid-1) < 150 then
if world:hasAccess(tile.x,tile.y) then
if inventory:getItemCount(seedid) == 0 then
takenyaseed()
end
getBot():findPath(tile.x,tile.y)
while world:getTile(tile.x,tile.y).fg == seedid and tile:canHarvest() do
reconnect(tile.x,tile.y)
getBot():hit(tile.x,tile.y)
sleep(delayharvest)
end
while world:getTile(tile.x,tile.y).fg == 0 and world:getTile(tile.x,tile.y).flags ~= 0 do
getBot():place(tile.x,tile.y,seedid)
sleep(delayplant)
end
end
end
end
end
end

function takegems()
y = 0
if foregraund(seedid) == 0 then
if TakeGemsWithGrowid then
addBot(GrowidTakeGems,PasswordGrowid)
      sleep(10000)
warptakegems(rumah,wid:upper())
      getBot(GrowidTakeGems).auto_collect = true
      getBot(GrowidTakeGems):findPath(0,y)
sleep(500)
for _,rah in pairs(getBot(GrowidTakeGems):getWorld():getObjects()) do
        if rah.id == 112 then
          while rah.count > 0 do
            for i =1,33 do
              getBot(GrowidTakeGems):moveRight()
              sleep(300)
              getBot(GrowidTakeGems):moveRight()
              sleep(300)
              getBot(GrowidTakeGems):moveRight()
              sleep(300)
            end
            y = y + 2
            getBot(GrowidTakeGems):findPath(0,y)
          end
          if rah.count == 0 then
            removeBot(GrowidTakeGems)
            sleep(10000)
            botshow("Done Taking Soil Gems")
                end
              end
            end
          end
        end
      end

function plant()
if not SeparatePlant then
return
end
if DontPlant then
return
end
cekbp()
coptrashs()
for i, tile in ipairs(world:getTiles()) do
if 0 == world:getTile(tile.x, tile.y).fg and 0 ~= world:getTile(tile.x, tile.y + 1).fg and world:getTile(tile.x, tile.y + 1).fg ~= seedid and inventory:getItemCount(seedid) > 0 then
if world:hasAccess(tile.x, tile.y) then
getBot():findPath(tile.x, tile.y)
sleep(20)
if world:getTile(math.floor(world:getLocal().posx / 32), math.floor(world:getLocal().posy / 32)).fg == 0 then
reconnect(tile.x,tile.y)
getBot():place(tile.x,tile.y,seedid)
sleep(20)
sleep(delayplant)
end
if world:getTile(math.floor(world:getLocal().posx / 32 - 1), math.floor(world:getLocal().posy / 32)).fg == 0 then
reconnect(tile.x,tile.y)
getBot():place(tile.x,tile.y,seedid)
sleep(20)
sleep(delayplant)
end
end
end
end
end

function warptakegems(world,id)
getBot(GrowidTakeGems):sendPacket(3,"action|join_request\nname|"..world:upper().."|"..id:upper().."\ninvitedWorld|0")
sleep(4000)
getBot(GrowidTakeGems):sendPacket(3,"action|join_request\nname|"..world:upper().."|"..id:upper().."\ninvitedWorld|0")
sleep(4000)
end


 sayAn= {
        "Finally",
        "Wow Have A Nice Day",
        "Love You /kiss",
        "Bentar lagi weekend, pasti seru banget nih.",
        "Cuma bisa doa aja, gimana lagi.",
        "Lagi asik main, ada yang gangguin.",
        "Gue gak peduliin, tinggalin aja.",
        "Lagi mikirin, gak usah bener-bener serius.",
        "Jangan dibawa serius, nanti malah stress.",
        "Kondisi lagi kacau, gak karuan banget.",
        "Kapan Ya Makan Enak",
    }

    local acakIndex = math.random(1, #sayAn)
    local totalsay = sayAn[acakIndex]


function warpdoang(world,id)
getBot():sendPacket(3,"action|join_request\nname|"..world:upper().."|"..id:upper().."\ninvitedWorld|0")
sleep(6000)
getBot():sendPacket(3,"action|join_request\nname|"..world:upper().."|"..id:upper().."\ninvitedWorld|0")
sleep(6000)
getBot():say(totalsay)
end

nuked = false 
function warp(worldra,id)
    cok = 0
while getBot():getWorld().name:upper() ~= worldra:upper() and not nuked do
        while getBot().status ~= 1 do
            getBot():connect()
            sleep(5000)
        end
        getBot():sendPacket(3,"action|join_request\nname|"..worldra:upper().."\ninvitedWorld|0")
        sleep(5000)
        if cok == 10 then
            nuked = true
        else
            cok = cok + 1
        end
    end
    if id ~= "" and not nuked then
        while world:getTile(math.floor(world:getLocal().posx / 32), math.floor(world:getLocal().posy / 32)).fg == 6 and not nuked do
            while getBot().status ~= 1 do
                getBot():connect()
                sleep(5500)
            end
            getBot():sendPacket(3,"action|join_request\nname|"..worldra:upper().."|"..id:upper().."\ninvitedWorld|0")
            sleep(1000)
        end
    else
        while world:getTile(math.floor(world:getLocal().posx / 32), math.floor(world:getLocal().posy / 32)).fg == 6 and not nuked do
            while getBot().status ~= 1 do
                getBot():connect()
                sleep(5500)
            end
            getBot():sendPacket(3,"action|join_request\nname|"..worldra:upper().."|"..id:upper().."\ninvitedWorld|0")
            sleep(1000)
    end
end
getBot():say(totalsay)
end

function warpfarm(worldra,id)
    cok = 0
while getBot():getWorld().name:upper() ~= worldra:upper() and not nuked do
        while getBot().status ~= 1 do
            getBot():connect()
            sleep(8000)
        end
        getBot():sendPacket(3,"action|join_request\nname|"..worldra:upper().."\ninvitedWorld|0")
        sleep(8000)
        if cok == 10 then
            nuked = true
        else
            cok = cok + 1
        end
    end
    if id ~= "" and not nuked then
  while world:getTile(math.floor(world:getLocal().posx / 32),math.floor(world:getLocal().posy / 32)).fg == 6 and not nuked do
   for i=1, #wid do
widreal = wid[i]
           while getBot().status ~= 1 do
            getBot():connect()
            sleep(8000)
            end
            getBot():sendPacket(3,"action|join_request\nname|"..worldra:upper().."|"..wid[i].."\ninvitedWorld|0")
            sleep(5000)
if world:getTile(math.floor(world:getLocal().posx / 32),math.floor(world:getLocal().posy / 32)).fg ~= 6 then
break
end
        end
if world:getTile(math.floor(world:getLocal().posx / 32),math.floor(world:getLocal().posy / 32)).fg ~= 6 then
break
end
end
end
getBot():say(totalsay)
sleep(100)
end

function restoretime()
for i = 1,#TimeRest do
table.insert(Time, #TimeRest)
end
end

function dropItem(itemID, count)
if inventory:getItemCount(itemID) >= count then
getBot():sendPacket(2,"action|drop\nitemID|" .. itemID)
sleep(500)
getBot():sendPacket(2,"action|dialog_return\ndialog_name|drop_item\nitemID|" .. itemID .. "|\ncount|" .. count)
sleep(1000)
end
end 

function takepick()
if TakePick then
if inventory:getItemCount(98) == 0 then
getBot().auto_collect = false
botshow("Taking Pick")
    warp(WorldPick,WorldPickID)
    sleep(100)
    while inventory:getItemCount(98) == 0 do
        for _,obj in pairs(world:getObjects()) do
            if obj.id == 98 then
                getBot():findPath(math.floor(obj.x / 32),math.floor(obj.y / 32))
                sleep(1000)
               getBot().auto_collect = true
               sleep(5000)
            end
            if inventory:getItemCount(98) > 0 then
              getBot().auto_collect = false
                break
            end
        end
    end
    getBot():moveLeft()
    sleep(100)
    while inventory:getItemCount(98) > 1 do
    getBot():sendPacket(2,"action|drop\n|itemID|98")
    sleep(1000)
    getBot():sendPacket(2,"action|dialog_return\ndialog_name|drop_item\nitemID|98|\ncount|"..(inventory:getItemCount(98) - 1))
    sleep(1000)
    end
    getBot():wear(98)
    sleep(500)
end
end
end

function joinworld()
botshow("World Finish, Joining World...")
    sleep(100)
    for _,bimba in pairs(WorldForJoin) do
        warpdoang(bimba,"")
        sleep(4000)
    end
end

function autoban()
 for _, peler in pairs(world:getPlayers()) do
        for _, own in pairs(WhiteList) do
            if peler.name:upper() == own:upper() and peler.name:upper() ~= getBot().name:upper() then
                getBot():say("/ban "..peler.name)
                sleep(3000) 
               end
            end
        end
    end

function autoleave()
if AutoLeave then
for _, peler in pairs(world:getPlayers()) do
for _, own in pairs(WhiteList) do
       if peler.name:upper() == own:upper() and peler.name:upper() ~= getBot().name:upper() then
if peler > MaxPeople then
getBot():sendPacket(3,"action|join_request\nname|" .. EXIT .. "\ninvitedWorld|0")
sleep(DelayLeave)
warp(rumah,wid)
jalan()
end
end
end
end
end
end


function breaks()
ybot = math.floor(getBot():getWorld():getLocal().posy/32)
cekbp()
rmetot1()
    coptrashs()
posX = 2
posY = ybot + 1
if not IgnoreGems then
getBot().ignore_gems = false
end
if world:getTile(1,ybot).fg == 0 then
    getBot():findPath(1,ybot)
    sleep(100)
end
if world:getTile(1,ybot).fg ~= 0 and not SoilFarmMode then
posX = 2
posY = 6
getBot():findPath(1,5)
sleep(100)
end
if world:getTile(1,ybot).fg ~= 0 and SoilFarmMode then
posX = 2
posY = 7
getBot():findPath(1,6)
sleep(100)
end
    while inventory:getItemCount(seedid - 1) > 0 and inventory:getItemCount(seedid) < 200 do
      reconnect(posX - 1, posY - 1)
        if BreakTiles == "1" then
            getBot():place(posX - 2, posY - 1, seedid - 1)
            sleep(delayplace)
            while world:getTile(posX - 2, posY - 1).fg ~= 0 or world:getTile(posX - 2, posY - 1).bg ~= 0 do
                getBot():hit(posX - 2, posY - 1)
                sleep(delaypunch)
            reconnect(posX - 1, posY - 1)
            end
        end
        if BreakTiles == "2" then
            getBot():place(posX - 2, posY - 1, seedid - 1)
            sleep(delayplace)
            getBot():place(posX - 2, posY - 2, seedid - 1)
            sleep(delayplace)
            while world:getTile(posX - 2, posY - 1).fg ~= 0 or world:getTile(posX - 2, posY - 1).bg ~= 0 do
                getBot():hit(posX - 2, posY - 1)
                sleep(delaypunch)
      reconnect(posX - 1, posY - 1)
            end
            while world:getTile(posX - 2, posY - 2).fg ~= 0 or world:getTile(posX - 2, posY - 2).bg ~= 0 do
                getBot():hit(posX - 2, posY - 2)
                sleep(delaypunch)
      reconnect(posX - 1, posY - 1)
            end
        end
        if BreakTiles == "3" then
            getBot():place(posX - 2, posY - 2, seedid - 1)
            sleep(delayplace)
            getBot():place(posX - 2, posY - 1, seedid - 1)
            sleep(delayplace)
            getBot():place(posX - 2, posY, seedid - 1)
            sleep(delayplace)
            while world:getTile(posX - 2, posY - 2).fg ~= 0 or world:getTile(posX - 2, posY - 2).bg ~= 0 do
                getBot():hit(posX - 2, posY - 2)
                sleep(delaypunch)
           reconnect(posX - 1, posY - 1)
            end
            while world:getTile(posX - 2, posY - 1).fg ~= 0 or world:getTile(posX - 2, posY - 1).bg ~= 0 do
                getBot():hit(posX - 2, posY - 1)
                sleep(delaypunch)
           reconnect(posX - 1, posY - 1)
            end
            while world:getTile(posX - 2, posY).fg ~= 0 or world:getTile(posX - 2, posY).bg ~= 0 do
                getBot():hit(posX - 2, posY)
                sleep(delaypunch)
            reconnect(posX - 1, posY - 1)
            end
        end
if BreakTiles == "4" then
getBot():place(posX-2,posY-3,seedid-1)
sleep(delayplace)
getBot():place(posX-2,posY-2,seedid-1)
sleep(delayplace)
getBot():place(posX-2,posY-1,seedid-1)
sleep(delayplace)
getBot():place(posX-2,posY,seedid-1)
sleep(delayplace)
while world:getTile(posX-2,posY-3).fg ~= 0 or world:getTile(posX-2,posY-3).bg ~= 0 do
getBot():hit(posX-2,posY-3)
sleep(delaypunch)
reconnect(posX - 1, posY - 1)
end
while world:getTile(posX-2,posY-2).fg ~= 0 or world:getTile(posX-2,posY-2).bg ~= 0 do
getBot():hit(posX-2,posY-2)
sleep(delaypunch)
reconnect(posX - 1, posY - 1)
end
while world:getTile(posX-2,posY-1).fg ~= 0 or world:getTile(posX-2,posY-1).bg ~= 0 do
getBot():hit(posX-2,posY-1)
sleep(delaypunch)
reconnect(posX - 1, posY - 1)
end
while world:getTile(posX-2,posY).fg ~= 0 or world:getTile(posX-2,posY).bg ~= 0 do
getBot():hit(posX-2,posY)
sleep(delaypunch)
reconnect(posX - 1, posY - 1)
end
end
if BreakTiles == "5" then
getBot():place(posX-2,posY-3,seedid-1)
sleep(delayplace)
getBot():place(posX-2,posY-2,seedid-1)
sleep(delayplace)
getBot():place(posX-2,posY-1,seedid-1)
sleep(delayplace)
getBot():place(posX-2,posY,seedid-1)
sleep(delayplace)
getBot():place(posX-2,posY+1,seedid-1)
sleep(delayplace)
while world:getTile(posX-2,posY-3).fg ~= 0 or world:getTile(posX-2,posY-3).bg ~= 0 do
getBot():hit(posX-2,posY-3)
sleep(delaypunch)
reconnect(posX - 1, posY - 1)
end
while world:getTile(posX-2,posY-2).fg ~= 0 or world:getTile(posX-2,posY-2).bg ~= 0 do
getBot():hit(posX-2,posY-2)
sleep(delaypunch)
reconnect(posX - 1, posY - 1)
end
while world:getTile(posX-2,posY-1).fg ~= 0 or world:getTile(posX-2,posY-1).bg ~= 0 do
getBot():hit(posX-2,posY-1)
sleep(delaypunch)
reconnect(posX - 1, posY - 1)
end
while world:getTile(posX-2,posY).fg ~= 0 or world:getTile(posX-2,posY).bg ~= 0 do
getBot():hit(posX-2,posY)
sleep(delaypunch)
reconnect(posX - 1, posY - 1)
end
while world:getTile(posX-2,posY+1).fg ~= 0 or world:getTile(posX-2,posY+1).bg ~= 0 do
getBot():hit(posX-2,posY+1)
sleep(delaypunch)
reconnect(posX - 1, posY - 1)
end
end
end
end

function foregraund(itemid)
      local count = 0
      for _, tile in ipairs(getBot():getWorld():getTiles()) do
        if tile.fg == itemid and tile:canHarvest() then
      if world:hasAccess(tile.x,tile.y) then
          count = count + 1
      end
   end
end
      return count
    end

function backpospack(worldnya,x,y)
werkd = worldnya
    for _, tile in pairs(world:getTiles()) do
        if world:getTile(math.floor(world:getLocal().posx / 32),math.floor(world:getLocal().posy / 32)).fg == 6 then
            repeat
            getBot():sendPacket(3,"action|join_request\nname|".. werkd .. "|" .. wid:upper().."\ninvitedWorld|0")
            sleep(4000)
            until world:getTile(math.floor(world:getLocal().posx / 32),math.floor(world:getLocal().posy / 32)).fg ~= 6
            if x and y and getBot().status == 1 and getBot():getWorld().name:upper() == werkd:upper() then
                repeat
                    getBot():findPath(x,y)
                    sleep(100)
                until math.floor(world:getLocal().posx / 32) == x or math.floor(world:getLocal().posy / 32) == y
            end
            if getBot().status == 1 and getBot():getWorld().name:upper() == werkd:upper() then
                if x and y then
                    if getBot().status == 1 and math.floor(world:getLocal().posx / 32) == x and math.floor(world:getLocal().posy / 32) == y then
                        break
                    end
                elseif getBot().status == 1 then
                    break
                end
            end
        end
    end
end

function backposseed(worldnya,x,y)
werkd = worldnya
    for _, tile in pairs(world:getTiles()) do
        if world:getTile(math.floor(world:getLocal().posx / 32),math.floor(world:getLocal().posy / 32)).fg == 6 then
            repeat
            getBot():sendPacket(3,"action|join_request\nname|".. werkd .. "|" .. wid:upper().."\ninvitedWorld|0")
            sleep(4000)
            until world:getTile(math.floor(world:getLocal().posx / 32),math.floor(world:getLocal().posy / 32)).fg ~= 6
            if x and y and getBot().status == 1 and getBot():getWorld().name:upper() == werkd:upper() then
                repeat
                    getBot():findPath(x,y)
                    sleep(100)
                until math.floor(world:getLocal().posx / 32) == x or math.floor(world:getLocal().posy / 32) == y
            end
            if getBot().status == 1 and getBot():getWorld().name:upper() == werkd:upper() then
                if x and y then
                    if getBot().status == 1 and math.floor(world:getLocal().posx / 32) == x and math.floor(world:getLocal().posy / 32) == y then
                        break
                    end
                elseif getBot().status == 1 then
                    break
                end
            end
        end
    end
end

function reconnectpack(world,x,y)
if getBot().status == 1 and getBot():getWorld().name:upper() == "EXIT" then
TagBan("**"..getBot().name:upper().." In EXIT, Now Back Saving "..pack.." In "..world.." @everyone **")
sleep(5000)
warp(world,WorldSavePackID)
sleep(500)
backpospack(world,x,y)
end
if getBot().status ~= 1 then
TagBan("**"..getBot().name:upper().." Was "..status().." Reconnecting... @everyone **")
repeat
getBot():connect()
sleep(8000)
until getBot().status == 1 or getBot().status == BotStatus.account_banned or getBot().status == BotStatus.location_banned
if getBot().status == BotStatus.account_banned then 
TagBan("**"..getBot().name:upper().." Was "..status().." Removing Bot... @everyone**")
banned()
elseif getBot().status == BotStatus.location_banned then
TagBan("**"..getBot():getLocal().name:upper().." Was "..status().." Removing Bot... @everyone**")
banned()
elseif getBot().status == 1 then
TagBan("**"..getBot().name:upper().." Was "..status().." Now Back To Saving "..pack.." In "..world.." @everyone **")
sleep(5000)
warp(world,WorldSavePackID)
sleep(500)
backpospack(world,x,y)
end
end
end

function reconnectseed(world,x,y)
if getBot().status == 1 and getBot():getWorld().name:upper() == "EXIT" then
TagBan("**"..getBot().name:upper().." In EXIT, Now Back Saving "..pack.." In "..world.." @everyone **")
sleep(5000)
warp(world,WorldSaveSeedID)
sleep(500)
backposseed(world,x,y)
end
if getBot().status ~= 1 then
TagBan("**"..getBot().name:upper().." Was "..status().." Reconnecting... @everyone **")
repeat
getBot():connect()
sleep(8000)
until getBot().status == 1 or getBot().status == BotStatus.account_banned or getBot().status == BotStatus.location_banned
if getBot().status == BotStatus.account_banned then 
TagBan("**"..getBot().name:upper().." Was "..status().." Removing Bot... @everyone**")
banned()
elseif getBot().status == BotStatus.location_banned then
TagBan("**"..getBot():getLocal().name:upper().." Was "..status().." Removing Bot... @everyone**")
banned()
elseif getBot().status == 1 then
TagBan("**"..getBot().name:upper().." Was "..status().." Now Back To Saving Seeds In "..world.." @everyone **")
sleep(5000)
warp(world,WorldSaveSeedID)
sleep(500)
backposseed(world,x,y)
end
end
end

function round(n)
    return n % 1 > 0.5 and math.ceil(n) or math.floor(n)
end

function CekTilePack(x,y,num)
    local count = 0
    local stack = 0
    for _,obj in pairs(world:getObjects()) do
        if round(obj.x / 32) == x and math.floor(obj.y / 32) == y then
            count = count + obj.count
            stack = stack + 1
        end
    end
    if stack < 20 and count <= (4000 - num) then
        return true
    end
    return false
end

function savecuy()
atas = getBot():getWorld().name
    for _,pack in pairs(packitemid) do
        for _,tile in pairs(world:getTiles()) do
            if tile.fg == IDPatokanPack or tile.bg == IDPatokanPack then
                if CekTilePack(tile.x,tile.y,inventory:getItemCount(pack)) then
                    while math.floor(world:getLocal().posx / 32) ~= (tile.x - 1) or math.floor(world:getLocal().posy / 32) ~= tile.y do
                        getBot():findPath(tile.x - 1,tile.y)
                        sleep(1000)
                         reconnectpack(atas, tile.x, tile.y)
                    end
                    while inventory:getItemCount(pack) > 0 and CekTilePack(tile.x,tile.y,inventory:getItemCount(pack)) do
                        getBot():sendPacket(2,"action|drop\n|itemID|"..pack)
                        sleep(1000)
                        getBot():sendPacket(2,"action|dialog_return\ndialog_name|drop_item\nitemID|"..pack.."|\ncount|"..inventory:getItemCount(pack))
                        sleep(1000)
                        reconnectpack(atas, tile.x, tile.y)
                    end
                end
            end
            if inventory:getItemCount(pack) == 0 then
                break
            end
        end
    end
end

function sampah()
if next(CustomItem) ~= nil then
getBot():moveUp()
for _, sampah in pairs(CustomItem) do
royal = inventory:getItemCount(sampah)
    while inventory:getItemCount(sampah) ~= 0 do
    getBot():sendPacket(2,"action|drop\nitemID|" .. sampah)
    getBot():sendPacket(2,"action|dialog_return\ndialog_name|drop_item\nitemID|" .. sampah .. "|\ncount|" ..royal)
    sleep(500)
    getBot():moveRight()
    end
end
    else
    return
    end
end

function SeedsScanner(ItemID)
local kiwar = 0
    for _, object in pairs(world:getObjects()) do 
        if object.id == ItemID then
      kiwar = kiwar + object.count
        end
    end
return kiwar
end

function CekTileSeeds(x,y,num)
    local count = 0
    local stack = 0
    for _,obj in pairs(world:getObjects()) do
        if round(obj.x / 32) == x and math.floor(obj.y / 32) == y then
            count = count + obj.count
            stack = stack + 1
        end
    end
    if count <= (3800 - num) then
        return true
    end
    return false
end

function saveseed()
getBot().auto_collect = false
botpack("Saving Seeds")
atas = getBot():getWorld().name
        warp(WorldSaveSeed[IndexSaveSeed],WorldSaveSeedID)
    for _, tile in pairs(world:getTiles()) do
        if tile.fg == IDPatokanSeed or tile.bg == IDPatokanSeed then 
           if CekTileSeeds(tile.x,tile.y,inventory:getItemCount(seedid)) then
                while math.floor(world:getLocal().posx / 32) ~= (tile.x - 1) or math.floor(world:getLocal().posy / 32) ~= tile.y do
                    getBot():findPath(tile.x - 1,tile.y)
                    sleep(100)
                    reconnectseed(atas, tile.x, tile.y)
                end
                while inventory:getItemCount(seedid) > 0 and CekTileSeeds(tile.x,tile.y,inventory:getItemCount(seedid)) do
                    getBot():sendPacket(2,"action|drop\n|itemID|"..seedid)
                    sleep(1000)
                    getBot():sendPacket(2,"action|dialog_return\ndialog_name|drop_item\nitemID|"..seedid.."|\ncount|"..inventory:getItemCount(seedid))
                    sleep(1000)
                    reconnectseed(atas, tile.x, tile.y)
                end
            end
        if inventory:getItemCount(seedid) == 0 then
                break
            end
        end
    end
    sampah()
    seeddrop = SeedsScanner(seedid)
    hasilseed = 200
    botpack("Success Saving Seeds") 
    hasilseed = 0
    IndexSaveSeed = IndexSaveSeed + 1

    if IndexSaveSeed > #WorldSaveSeed then
        IndexSaveSeed = 1
    end

    warp(rumah, widreal)
end



function belicuy()
  woloy = getBot():getWorld().name
    sleep(1800)
    getBot().auto_collect = false
    botpack("Buying Pack..")
    warp(WorldSavePack[IndexSavePack],WorldSavePackID)
rara = SeedsScanner(packitemid[1])
    while getBot().gem_count > packgems do
            getBot():sendPacket(2,"action|buy\nitem|".. itemname)
            sleep(4000)
            gemssave = gemssave + packgems
        if inventory:getItemCount(packitemid[1]) < 1 then
                getBot():sendPacket(2,"action|buy\nitem|upgrade_backpack")
                sleep(5000)
        end
        if getBot().gem_count < packgems then
            break
      end
 end
        savecuy()
         totalpack = SeedsScanner(packitemid[1])
     hasilpack = math.abs(rara - totalpack)
        botpack("Done Droping Pack, Back To Farm...")
  hasilpack = 0
   IndexSavePack = IndexSavePack + 1
  if IndexSavePack > #WorldSavePack then
 IndexSavePack = 1
 end
    warp(woloy,widreal)
end

function anjay()
  if getBot().gem_count > MinimumGems then 
            belicuy()
end
end

function rotisan()
if inventory:getItemCount(seedid) == 200 then
saveseed()
end
end

function cukcuk1(world)
if foregraund(seedid) == 0 then
gemsakhir = getBot().gem_count
gemssmua = gemsakhir + gemssave
local perbedaan = math.abs(gemsawal - gemssmua)
anjay()
pohon[world] = totaltree()
berlian[world] = perbedaan
botshow("World Finish")
gemssave = 0
end
end

function jalan()
letus = getBot():getWorld().name:upper()
if foregraund(seedid) == 0 then
cukcuk1(letus)
end
while foregraund(seedid) > 0 do
if UsingCommand then
offandon()
end
harvest()
if AutoBan then
autoban()
end
if AutoLeave then
autoleave()
end
if RestBot then
botRest()
end
if AutoOffBot then
banwave()
end
if UsingCommand then
offandon()
end
breaks()
anjay()
if AutoOffBot then
banwave()
end
if UsingCommand then
offandon()
end
plant()
anjay()
if AutoOffBot then
banwave()
end
rotisan()
cukcuk1(letus)
end
end

function clearTable(tbl)
    for k in pairs(tbl) do
        tbl[k] = nil
    end
end

function startwoi()
while true do
if getBot().status == 1 then
for index,world in pairs(worlds) do
emoji = cekemoji()
rumah = world
DataWorld()
getBot():warp("EXIT")
if Guest then
sleep(20000)
end
sleep(5000)
takepick()
warpfarm(world,wid)
if not nuked then
clearTable(processedTimes)
seedid = detect()
botshow("Bot Start")
getBot().collect_range = 4
getBot().move_interval = 7
antiToxic()
tt = os.time()
gemsawal = getBot().gem_count
jalan()
tambal()
      takegems()
      tt = os.time() - tt
      Time[world] = math.floor(tt / 3600) .. " Hours " .. math.floor(tt % 3600 / 60) .. " Minutes"
      sleep(100)
      if start < #WorldList then
       start = start + 1
      else
      loopnya = loopnya + 1
     waktu = {}
     berlian = {}
     pohon = {}
      end
      if JoinWorldAfterFinish then
        joinworld()
      end
else
Time[world] = "NUKED"
botshow("World Is Nuked, Going To Next World..")
nuked = false
sleep(5000)
   end
end
if not loop then
    DataWorld()
    sleep(50)
    botshow("All World Finish, Remove Bot..")
    removeBot(getBot().name)
    break
  end
end
end
end

startwoi()
